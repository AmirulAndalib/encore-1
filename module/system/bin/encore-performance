#!/system/bin/sh

apply() {
	if [ -f $2 ]; then
		chmod 644 $2 >/dev/null 2>&1
		echo $1 >$2
		chmod 444 $2 >/dev/null 2>&1
	fi
}

# Duration in nanoseconds of one scheduling period
SCHED_PERIOD="$((1 * 1000 * 1000))"

# How many tasks should we have at a maximum in one scheduling period
SCHED_TASKS="10"

# Sync to data in the rare case a device crashes
sync

# Scheduler Tweaks
apply 3 /proc/sys/kernel/perf_cpu_time_max_percent
apply 1 /proc/sys/kernel/sched_autogroup_enabled
apply 1 /proc/sys/kernel/sched_child_runs_first
apply 0 /proc/sys/kernel/sched_tunable_scaling
apply "$SCHED_PERIOD" /proc/sys/kernel/sched_latency_ns
apply "$((SCHED_PERIOD / SCHED_TASKS))" /proc/sys/kernel/sched_min_granularity_ns
apply "$((SCHED_PERIOD / 2))" /proc/sys/kernel/sched_wakeup_granularity_ns
apply 5000000 /proc/sys/kernel/sched_migration_cost_ns
apply 0 /proc/sys/kernel/sched_min_task_util_for_colocation
apply 4 /proc/sys/kernel/sched_nr_migrate

if [ -f "/sys/kernel/debug/sched_features" ]; then
	# Consider scheduling tasks that are eager to run
	apply NEXT_BUDDY /sys/kernel/debug/sched_features

	# Some sources report large latency spikes during large migrations
	apply NO_TTWU_QUEUE /sys/kernel/debug/sched_features
fi

if [ -d "/dev/stune/" ]; then
	# Prefer to schedule top-app tasks on idle CPUs
	apply 1 /dev/stune/top-app/schedtune.prefer_idle

	# Mark top-app as boosted, find high-performing CPUs
	apply 1 /dev/stune/top-app/schedtune.boost
fi

# Memory tweak
apply 200 /proc/sys/vm/vfs_cache_pressure

# I/O Tweaks
for queue in /sys/block/*/queue; do
	# Reduce heuristic read-ahead in exchange for I/O latency
	apply 32 "$queue/read_ahead_kb"

	# Reduce the maximum number of I/O requests in exchange for latency
	apply 32 "$queue/nr_requests"
done

# CPU tweaks
cpu="0"
while [ $cpu -lt $(nproc --all) ]; do
	cpu_dir="/sys/devices/system/cpu/cpu${cpu}"
	if [ -d "$cpu_dir" ]; then
		apply "performance" "${cpu_dir}/cpufreq/scaling_governor"
	fi
	cpu="$((cpu + 1))"
done

# Qualcomm CPU Bus
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu-cpu-llcc-bw/devfreq/soc:qcom,cpu-cpu-llcc-bw/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu0-cpu-llcc-lat/devfreq/soc:qcom,cpu0-cpu-llcc-lat/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu0-cpu-l3-lat/devfreq/soc:qcom,cpu0-cpu-l3-lat/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu4-cpu-llcc-lat/devfreq/soc:qcom,cpu4-cpu-llcc-lat/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu4-cpu-l3-lat/devfreq/soc:qcom,cpu4-cpu-l3-lat/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu7-cpu-l3-lat/devfreq/soc:qcom,cpu7-cpu-l3-lat/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu4-llcc-ddr-lat/devfreq/soc:qcom,cpu4-llcc-ddr-lat/governor

# MTK Power and CCI mode
apply "1" /proc/cpufreq/cpufreq_cci_mode
apply "3" /proc/cpufreq/cpufreq_power_mode

# EAS/HMP Switch
apply "0" /sys/devices/system/cpu/eas/enable

# Disable PPM (this is fire dumpster)
apply "0" /proc/ppm/enabled

# GPU Frequency
if [ -d /proc/gpufreq ]; then
	gpu_freq="$(cat /proc/gpufreq/gpufreq_opp_dump | grep -o 'freq = [0-9]*' | sed 's/freq = //' | sort -nr | head -n 1)"
	apply "$gpu_freq" /proc/gpufreq/gpufreq_opp_freq
elif [ -d /proc/gpufreqv2 ]; then
	gpu_freq="$(cat /proc/gpufreqv2/gpu_working_opp_table | awk '{print $3}' | sed 's/,//g' | sort -nr | head -n 1)"
	gpu_volt="$(cat /proc/gpufreqv2/gpu_working_opp_table | awk -v freq="$freq" '$0 ~ freq {gsub(/.*, volt: /, ""); gsub(/,.*/, ""); print}')"
	apply "${gpu_freq} ${gpu_volt}" /proc/gpufreqv2/fix_custom_freq_volt
fi

apply "performance" /sys/class/kgsl/kgsl-3d0/devfreq/governor

# Disable GPU Power limiter
if [ -f "/proc/gpufreq/gpufreq_power_limited" ]; then
	apply "ignore_batt_oc 1" /proc/gpufreq/gpufreq_power_limited
	apply "ignore_batt_percent 1" /proc/gpufreq/gpufreq_power_limited
	apply "ignore_low_batt 1" /proc/gpufreq/gpufreq_power_limited
	apply "ignore_thermal_protect 1" /proc/gpufreq/gpufreq_power_limited
	apply "ignore_pbm_limited 1" /proc/gpufreq/gpufreq_power_limited
fi

# Disable battery current limiter
apply "stop 1" /proc/mtk_batoc_throttling/battery_oc_protect_stop

# DRAM Frequency
apply "0" /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
apply "0" /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
apply "performance" /sys/class/devfreq/mtk-dvfsrc-devfreq/governor
apply "performance" /sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor
apply "performance" /sys/devices/platform/soc/soc:qcom,cpu-llcc-ddr-bw/devfreq/soc:qcom,cpu-llcc-ddr-bw/governor

# Adreno Boost
apply 1 /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost

# Touchpanel
tp_path="/proc/touchpanel"
apply "1" $tp_path/game_switch_enable
apply "0" $tp_path/oplus_tp_limit_enable
apply "0" $tp_path/oppo_tp_limit_enable
apply "1" $tp_path/oplus_tp_direction
apply "1" $tp_path/oppo_tp_direction

# Eara Thermal
apply "0" /sys/kernel/eara_thermal/enable
